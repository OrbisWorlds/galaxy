syntax = "proto3";

package galaxy.nft;

import "gogoproto/gogo.proto";
import "galaxy/nft/nft.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/galaxies-labs/galaxy/x/nft/types";

// Msg defines the brand Msg service.
service Msg {
    // CreateClass defines a method for creating a new class within brand.
    rpc CreateClass(MsgCreateClass) returns (MsgCreateClassResponse);

    // EditClass defines a method for editing an existing class.
    rpc EditClass(MsgEditClass) returns (MsgEditClassResponse);
}

message MsgCreateClass {
    option (cosmos.msg.v1.signer) = "creator";

    string brand_id = 1;

    string id = 2;

    uint32 fee_basis_points = 3;

    ClassDescription description = 4 [(gogoproto.nullable) = false];;

    string creator = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgCreateClassResponse {}


message MsgEditClass {
    option (cosmos.msg.v1.signer) = "editor";

    string brand_id = 1;

    string id = 2;

    uint32 fee_basis_points = 3;

    ClassDescription description = 4 [(gogoproto.nullable) = false];;

    string editor = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgEditClassResponse {}
