syntax = "proto3";

package galaxy.nft;

import "gogoproto/gogo.proto";

option go_package = "github.com/galaxies-labs/galaxy/x/nft/types";

message Class {
    // brand_id associated with the Class
    string brand_id = 1;

    // id is a unique identifier of the Classs within a brand
    // [a-zA-Z0-9-]{2,50}
    string id = 2;

    ClassDescription description = 3 [(gogoproto.nullable) = false];;

    // fee_basis_points defines fee basis point received an nft is traded.
    // ! value specified at creation time is immutable.
    // ! (it may be possible to update it proposal is accepted)
    // 1~10,000: 100 = 1%, 1 = 0.01%
    uint32 fee_basis_points = 4;
}

message ClassDescription {
    // name defines name of class
    string name = 1;

    // details defines detail information of class
    string details = 2;

    // image_uri uri for class image
    string image_uri = 3;

    // external_url for the the class website
    string external_url = 4;
}

message Supply {
    // sequence defines sequence that generates the id of an nft of a specific class
    int64 sequence = 1;

    // total_supply for tracks total number of nft tokens for a specific class.
    int64 total_suply = 2;
}

message NFT {
    // brand_id associated with the NFT
    string brand_id = 1;

    // class_id associated with the NFT
    string class_id = 2;
    
    // id is a unique identifier of the NFT within a class
    // auto increment within a class
    uint64 id = 3;

    // uri for the NFT metadata stored off chain
    string uri = 4;

    // var_uri for the NFT data wanted by the owner stored off chain
    string var_uri = 5;
}